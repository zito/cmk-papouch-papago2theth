#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# vim:sta:si:sw=4:sts=4:et:
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# The Check_MK official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Check has been developed using:
# Papago 2TH ETH - Thermo / Humidity / Dew point meter with eth if
# Device Firmware Version   1.7/15
# http://www.papouch.com/en/shop/product/papago-2th-eth-temperature-and-humidity-meter-with-ethernet/
#
# +------------------------------------------------------------------+
# | This file has been contributed by:                               |
# |                                                                  |
# | Václav Ovsík <vaclav.ovsik@gmail.com>             Copyright 2017 |
# +------------------------------------------------------------------+

# Example info:
#   [['1', '0', '209', '0'],
#    ['0', '4', '0', '0'],
#    ['0', '4', '0', '0'],
#    ['1', '0', '199', '0'],
#    ['2', '0', '242', '0'],
#    ['3', '0', '-11', '0']]
#


factory_settings["papouch_papago2theth_default_levels"] = {
# temperature levels [°C]
    'tempc_levels'   : (14, 17, 25, 28),
# humidity levels [%]
    'hum_levels'    : (20, 30, 70, 80),
# dew point levels [°C]
    'dewp_levels'   : (None, None, None, None),
    }

papouch_papago2theth_desc = [
    ('A', 'Temperature', 'tempc', '°C'),
    ('A', 'Humidity', 'hum', '%'),
    ('A', 'Dew point', 'dewp', '°C'),
    ('B', 'Temperature', 'tempc', '°C'),
    ('B', 'Humidity', 'hum', '%'),
    ('B', 'Dew point', 'dewp', '°C'),
    ]


def inventory_papouch_papago2theth(info):
    for (sens, name, ident, unit), (chtype, chstatus, chval, chunit) \
            in zip(papouch_papago2theth_desc, info):
        if chstatus == '4':
            continue
        yield sens + ' ' + name, {}

def check_papouch_papago2theth(item, params, info):
    def xstr(x):
        if x is None:
            return ''
        return str(x)
    for (sens, name, ident, unit), (chtype, chstatus, chval, chunit) \
            in zip(papouch_papago2theth_desc, info):
        if sens + ' ' + name == item:
            chval = saveint(chval) / 10.0
            if chunit == '1':
                chval = chval - 32 / 1.8    # Fahrenheit -> Celsius
            elif chunit == '2':
                chval = chval - 273.15      # Kelvin -> Celsius
            status = 0
            txt = '%s: %.1f%s' % (name, chval, unit)
            (crit_min, warn_min, warn_max, crit_max) = params[ident + '_levels']
            if crit_min is not None and chval <= crit_min:
                status = 2
                txt += ' (!!) <= %.1f' % crit_min
            elif warn_min is not None and chval <= warn_min:
                status = 1
                txt += ' (!) <= %.1f' % warn_min
            elif crit_max is not None and chval >= crit_max:
                status = 2
                txt += ' (!!) >= %.1f' % crit_max
            elif warn_max is not None and chval >= warn_max:
                status = 1
                txt += ' (!) >= %.1f' % warn_max
            perf = (ident, chval)
            perf += tuple(map(lambda x: x or None, (
                ':'.join(filter(None, (xstr(warn_min), xstr(warn_max)))),
                ':'.join(filter(None, (xstr(crit_min), xstr(crit_max)))))))
            return (status, {0:'OK', 1:'WARN', 2:'CRIT'}[status]
                    + ' - ' + txt, (perf, ))
    return (3, 'UNKNOWN - Item not found')



check_info["papouch_papago2theth"] = {
    "check_function"        : check_papouch_papago2theth,
    "inventory_function"    : inventory_papouch_papago2theth,
    "service_description"   : "Sensor %s",
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: "Papago_2TH_ETH" == oid(".1.3.6.1.2.1.1.1.0"),
    "snmp_info"		    : ( ".1.3.6.1.4.1.18248.31.1.2.1.1", [
            '1',    # papago_temp_V02-MIB::inChType
            '2',    # papago_temp_V02-MIB::inChStatus
            '3',    # papago_temp_V02-MIB::inChValue
            '4',    # papago_temp_V02-MIB::inChUnits
        ]),
    "default_levels_variable" : "papouch_papago2theth_default_levels",
}
